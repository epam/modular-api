apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "modular-api.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "modular-api.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ include "modular-api.chart" . }}
spec:
  replicas: {{ .Values.replicas }}
  strategy:
    type: {{ .Values.strategy.type }}
    {{- if eq .Values.strategy.type "RollingUpdate" }}
    rollingUpdate:
      maxSurge: {{ .Values.strategy.maxSurge }}
      maxUnavailable: {{ .Values.strategy.maxUnavailable }}
    {{- end}}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "modular-api.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "modular-api.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        helm.sh/chart: {{ include "modular-api.chart" . }}
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
    spec:
      restartPolicy: Always
      containers:
        - name: modular-api
          image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          livenessProbe:
            httpGet:
              path: '/health_check'
              scheme: HTTP
              port: 8085
            initialDelaySeconds: 20
            periodSeconds: 60
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          ports:
            - containerPort: 8085
              name: http
              protocol: TCP
          env:
            - name: modular_mongo_user
              valueFrom:
                secretKeyRef:
                  name: mongo-secret
                  key: username
            - name: modular_mongo_password
              valueFrom:
                secretKeyRef:
                  name: mongo-secret
                  key: password
            - name: MODULAR_API_INIT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: modular-api-secret
                  key: system-password
            - name: MODULAR_API_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: modular-api-secret
                  key: secret-key
            - name: MODULAR_API_MODE
              value: onprem
            - name: MODULAR_API_MONGO_URI
              value: "mongodb://$(modular_mongo_user):$(modular_mongo_password)@{{ .Values.mongoService }}:{{ .Values.mongoPort }}/"
            - name: MODULAR_API_MONGO_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: {{ include "modular-api.fullname" . }}
                  key: db-name
            - name: MODULAR_CLI_VAULT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: vault-secret
                  key: token
            - name: MODULAR_CLI_VAULT_ADDR
              value: "http://{{ .Values.vaultService }}:{{ .Values.vaultPort }}"
            - name: MODULAR_API_DISABLE_RATE_LIMITER
              valueFrom:
                configMapKeyRef:
                  name: {{ include "modular-api.fullname" . }}
                  key: disable-rate-limiter
            - name: HTTP_PROXY
              value: {{ .Values.httpProxy }}
            - name: HTTPS_PROXY
              value: {{ .Values.httpProxy }}
            - name: NO_PROXY
              value: {{ .Values.noProxy }}